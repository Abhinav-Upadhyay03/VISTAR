name: Build Application

on:
  push:
    branches: [ main, master, windows_v2 ]
  pull_request:
    branches: [ main, master, windows_v2 ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python3-pip python3-venv
        sudo apt-get install -y build-essential
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
    
    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          .\venv\Scripts\activate
        else
          source venv/bin/activate
        fi
    
    - name: Install Python dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install pyinstaller
    
    - name: Build application
      run: |
        cd backend
        python build.py
    
    - name: Create release zip
      run: |
        cd backend/dist
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          7z a -tzip ../../vistar-windows.zip flask_backend.exe
        else
          zip ../../vistar-linux.zip flask_backend
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: vistar-${{ matrix.os }}
        path: |
          vistar-windows.zip
          vistar-linux.zip
        if-no-files-found: error 